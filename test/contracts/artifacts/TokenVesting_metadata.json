{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IUnicryptAdmin",
						"name": "_uncxAdmins",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountInTokens",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startEmission",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endEmission",
						"type": "uint256"
					}
				],
				"name": "onLock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountInTokens",
						"type": "uint256"
					}
				],
				"name": "onMigrate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unlockDate",
						"type": "uint256"
					}
				],
				"name": "onRelock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fromLockID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "toLockID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountInTokens",
						"type": "uint256"
					}
				],
				"name": "onSplitLock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockIDFrom",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockIDto",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "onTransferLock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountInTokens",
						"type": "uint256"
					}
				],
				"name": "onWithdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BLACKLIST",
				"outputs": [
					{
						"internalType": "contract ITokenBlacklist",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "FEES",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "freeLockingFee",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "feeAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "freeLockingToken",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "LOCKS",
				"outputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "sharesDeposited",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sharesWithdrawn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startEmission",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endEmission",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "condition",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIGRATOR",
				"outputs": [
					{
						"internalType": "contract IMigrator",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINIMUM_DEPOSIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "NONCE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "SHARES",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_add",
						"type": "bool"
					}
				],
				"name": "adminSetWhitelister",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_shares",
						"type": "uint256"
					}
				],
				"name": "convertSharesToTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokens",
						"type": "uint256"
					}
				],
				"name": "convertTokensToShares",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_add",
						"type": "bool"
					}
				],
				"name": "editZeroFeeWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					}
				],
				"name": "getLock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumLockedTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getTokenLockIDAtIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getTokenLocksLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getTokenWhitelisterAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenWhitelisterLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getTokenWhitelisterStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockIDForTokenAtIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockedTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserLockedTokensLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getUserLocksForTokenLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					}
				],
				"name": "getWithdrawableShares",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					}
				],
				"name": "getWithdrawableTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getZeroFeeTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getZeroFeeTokensLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "incrementLock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startEmission",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endEmission",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "condition",
								"type": "address"
							}
						],
						"internalType": "struct TokenVesting.LockParams[]",
						"name": "_lock_params",
						"type": "tuple[]"
					}
				],
				"name": "lock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_option",
						"type": "uint256"
					}
				],
				"name": "migrate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "payForFreeTokenLocks",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_unlock_date",
						"type": "uint256"
					}
				],
				"name": "relock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					}
				],
				"name": "revokeCondition",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ITokenBlacklist",
						"name": "_contract",
						"type": "address"
					}
				],
				"name": "setBlacklistContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_freeLockingFee",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_feeAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_freeLockingToken",
						"type": "address"
					}
				],
				"name": "setFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IMigrator",
						"name": "_migrator",
						"type": "address"
					}
				],
				"name": "setMigrator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "splitLock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "condition",
						"type": "address"
					}
				],
				"name": "testCondition",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "tokenOnZeroFeeWhitelist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferLockOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"lock(address,(address,uint256,uint256,uint256,address)[])": {
					"params": {
						"_lock_params": "an array of locks with format: [LockParams[owner, amount, startEmission, endEmission, condition]] owner: user or contract who can withdraw the tokens amount: must be >= 100 units startEmission = 0 : LockType 1 startEmission != 0 : LockType 2 (linear scaling lock) use address(0) for no premature unlocking condition Fails if startEmission is not less than EndEmission Fails is amount < 100",
						"_token": "the erc20 token address"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"splitLock(uint256,uint256)": {
					"params": {
						"_amount": "the amount in tokens"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(uint256,uint256)": {
					"params": {
						"_amount": "amount of tokens to withdraw",
						"_lockID": "the lockID of the lock to be withdrawn"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"adminSetWhitelister(address,bool)": {
					"notice": "whitelisted accounts and contracts who can call the editZeroFeeWhitelist function"
				},
				"incrementLock(uint256,uint256)": {
					"notice": "increase the amount of tokens per a specific lock, this is preferable to creating a new lock Its possible to increase someone elses lock here it does not need to be your own, useful for contracts"
				},
				"lock(address,(address,uint256,uint256,uint256,address)[])": {
					"notice": "Creates one or multiple locks for the specified token"
				},
				"migrate(uint256,uint256)": {
					"notice": "migrates to the next locker version, only callable by lock owners"
				},
				"relock(uint256,uint256)": {
					"notice": "extend a lock with a new unlock date, if lock is Type 2 it extends the emission end date"
				},
				"revokeCondition(uint256)": {
					"notice": "premature unlock conditions can be malicous (prevent withdrawls by failing to evalaute or return non bools) or not give community enough insurance tokens will remain locked until the end date, in such a case, it can be revoked"
				},
				"setMigrator(address)": {
					"notice": "set the migrator contract which allows the lock to be migrated"
				},
				"splitLock(uint256,uint256)": {
					"notice": "split a lock into two seperate locks, useful when a lock is about to expire and youd like to relock a portion and withdraw a smaller portion Only works on lock type 1, this feature does not work with lock type 2"
				},
				"transferLockOwnership(uint256,address)": {
					"notice": "transfer a lock to a new owner, e.g. presale project -> project owner Please be aware this generates a new lock, and nulls the old lock, so a new ID is assigned to the new lock."
				},
				"withdraw(uint256,uint256)": {
					"notice": "withdraw a specified amount from a lock. _amount is the ideal amount to be withdrawn. however, this amount might be slightly different in rebasing tokens due to the conversion to shares, then back into an amount"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TokenVesting.sol": "TokenVesting"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/TokenVesting.sol": {
			"keccak256": "0xd550d5380f7463be78962c5ca711e2171d4d367e5fb999834f99bf0b4750deba",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://c07331874c5a085808093f5364c608cb6881ec2f0d79564bc8a3ea75e6add93a",
				"dweb:/ipfs/QmU6hVvEDBo757ZuGxfonn68Y6nApX4RrRpMuvpeAYWKNj"
			]
		}
	},
	"version": 1
}