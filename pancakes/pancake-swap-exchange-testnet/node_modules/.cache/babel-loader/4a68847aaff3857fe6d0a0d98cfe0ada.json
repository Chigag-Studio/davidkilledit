{"ast":null,"code":"var _jsxFileName = \"/home/wind/ethereum/test/pancake-swap-exchange-testnet/src/components/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { animated, useTransition } from 'react-spring';\nimport { DialogOverlay, DialogContent } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\nimport { transparentize } from 'polished';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedDialogOverlay = animated(DialogOverlay); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n_c = AnimatedDialogOverlay;\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`;\n_c2 = StyledDialogOverlay;\nconst AnimatedDialogContent = animated(DialogContent); // destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n_c3 = AnimatedDialogContent;\nconst StyledDialogContent = styled(_ref => {\n  let {\n    minHeight,\n    maxHeight,\n    mobile,\n    isOpen,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(AnimatedDialogContent, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}).attrs({\n  'aria-label': 'dialog'\n})`\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    border: 1px solid ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.invertedContrast;\n}};\n    background-color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.invertedContrast;\n}};\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\n    padding: 0px;\n    width: 80%;\n    overflow: hidden;\n\n    align-self: ${_ref4 => {\n  let {\n    mobile\n  } = _ref4;\n  return mobile ? 'flex-end' : 'center';\n}};\n\n    max-width: 420px;\n    ${_ref5 => {\n  let {\n    maxHeight\n  } = _ref5;\n  return maxHeight && css`\n        max-height: ${maxHeight}vh;\n      `;\n}}\n    ${_ref6 => {\n  let {\n    minHeight\n  } = _ref6;\n  return minHeight && css`\n        min-height: ${minHeight}vh;\n      `;\n}}\n    display: flex;\n    border-radius: 20px;\n\n    ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.mediaQueries.lg;\n}} {\n      width: 65vw;\n    }\n    ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.mediaQueries.sm;\n}} {\n      width: 85vw;\n    }\n  }\n`;\n_c4 = StyledDialogContent;\nexport default function Modal(_ref9) {\n  _s();\n\n  let {\n    isOpen,\n    onDismiss,\n    minHeight = false,\n    maxHeight = 50,\n    initialFocusRef,\n    children\n  } = _ref9;\n  const fadeTransition = useTransition(isOpen, null, {\n    config: {\n      duration: 200\n    },\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fadeTransition.map(_ref10 => {\n      let {\n        item,\n        key,\n        props\n      } = _ref10;\n      return item && /*#__PURE__*/_jsxDEV(StyledDialogOverlay, {\n        style: props,\n        onDismiss: onDismiss,\n        initialFocusRef: initialFocusRef,\n        children: /*#__PURE__*/_jsxDEV(StyledDialogContent, {\n          \"aria-label\": \"dialog content\",\n          minHeight: minHeight,\n          maxHeight: maxHeight,\n          mobile: isMobile,\n          children: [!initialFocusRef && isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            tabIndex: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 49\n          }, this) : null, children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Modal, \"na4Gt5Duj17Kw2KexVU0M/M0JtQ=\", false, function () {\n  return [useTransition];\n});\n\n_c5 = Modal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AnimatedDialogOverlay\");\n$RefreshReg$(_c2, \"StyledDialogOverlay\");\n$RefreshReg$(_c3, \"AnimatedDialogContent\");\n$RefreshReg$(_c4, \"StyledDialogContent\");\n$RefreshReg$(_c5, \"Modal\");","map":{"version":3,"sources":["/home/wind/ethereum/test/pancake-swap-exchange-testnet/src/components/Modal/index.tsx"],"names":["React","styled","css","animated","useTransition","DialogOverlay","DialogContent","isMobile","transparentize","AnimatedDialogOverlay","StyledDialogOverlay","AnimatedDialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","rest","attrs","theme","colors","invertedContrast","mediaQueries","lg","sm","Modal","onDismiss","initialFocusRef","children","fadeTransition","config","duration","from","opacity","enter","leave","map","item","key","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog',\n})`\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\n    background-color: ${({ theme }) => theme.colors.invertedContrast};\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\n    padding: 0px;\n    width: 80%;\n    overflow: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n\n    ${({ theme }) => theme.mediaQueries.lg} {\n      width: 65vw;\n    }\n    ${({ theme }) => theme.mediaQueries.sm} {\n      width: 85vw;\n    }\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 50,\n  initialFocusRef,\n  children,\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {/* eslint-disable */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {/* eslint-enable */}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}